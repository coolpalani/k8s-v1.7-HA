---

- name: Check if kube-dns pod account already available
  shell: kubectl get pods --namespace=kube-system |grep -i kube-dns |egrep -i "running|CrashLoopBackOff|Error|pending|terminating"
#  shell: kubectl get pods -n kube-system | grep -i kube-dns
#    ksvc=`kubectl get ServiceAccount -n kube-system | grep -i kube-dns | wc -l`
#    if ksvc == 0;then
#      echo "kube-dns pod is not available!"
#    else
#      echo "kube-dns already running!"
#    fi
  register: kdns_pod_status
  ignore_errors: true
- debug:
    msg: "Kube-dns podes already presented!"
  when: kdns_pod_status | succeeded

- name: Check if kube-dns ServiceAccount already available
  shell: kubectl get ServiceAccount -n kube-system | grep -i kube-dns
  register: kdns_svcacc

- debug:
    msg: "Kube-dns ServiceAccount already available"
  when: kdns_svcacc | succeeded

- name: Copy kube-dns template to k8s client machine
  template:
    src: kube-dns.j2
    dest: /tmp/kube-dns.yaml
    mode: 0644
  register: copy_dns_template
  when: ( kdns_pod_status | failed ) and
        ( kdns_svcacc | failed)
  ignore_errors: false
  
- name: Create kube-dns deployment
  command: kubectl create -f /tmp/kube-dns.yaml
  register: create_dns
  when: ( kdns_pod_status | failed ) and
        ( kdns_svcacc | failed)
  ignore_errors: false

- name: Delete copied template
  file:
    path: /tmp/kube-dns.yaml
    state: absent
  when: ( kdns_pod_status | failed ) and
        ( kdns_svcacc | failed)

- name: Get new deployed kube-dns status
  shell: kubectl get pods -l k8s-app=kube-dns -n kube-system -o wide
  register: new_kubedns_deployment
  when: kdns_pod_status | failed
- debug:
    var: new_kubedns_deployment.stdout
  when: kdns_pod_status | failed

- name: Get existing kube-dns deployment status
  shell: kubectl get pods -l k8s-app=kube-dns -n kube-system -o wide|grep -i kube-dns|awk '{print $1 " state is "$3 ", and running on "$6}'
  register: exising_kubedns_deployment
  when: kdns_pod_status | succeeded
- debug:
    var: exising_kubedns_deployment.stdout
  when: kdns_pod_status | succeeded
